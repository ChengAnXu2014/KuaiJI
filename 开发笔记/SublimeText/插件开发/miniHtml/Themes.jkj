《《简介》》
Sublime 的界面外观是由 themes 控制的;而文本的 highlighting 则是由 color scheme 控制的.
Sublime 的 theme engine 基于 raster graphics ;PNG 图片用于阻止纹理损坏和提供 full alpha 控制.
UI 中的每个 element 都可以拥有有最多4层 textures 或 fills ,和控制 opacity 和 padding 的 properties .
properties 可以通过用户互动和 settings 有条件地修改.
theme 文件的扩展名格式为:.sublime-theme ;采用 JSON 语法.





《《Example》》
下面是一个简单的例子,完整的 theme 会包含更多的 rules :
{
    "variables":
    {
        "light_gray": "rgb(240, 240, 240)"
    },
    "rules":
    [
        // Set up the textures for a button
        {
            "class": "button_control",
            "layer0.tint": "#000",
            "layer0.opacity": 1.0,
            "layer1.texture": "Theme - Example/textures/button_background.png",
            "layer1.inner_margin": 4,
            "layer1.opacity": 1.0,
            "layer2.texture": "Theme - Example/textures/button_highlight.png",
            "layer2.inner_margin": 4,
            "layer2.opacity": 0.0,
            "content_margin": [4, 8, 4, 8]
        },
        // Show the highlight texture when the button is hovered
        {
            "class": "button_control",
            "attributes": ["hover"],
            "layer2.opacity": 1.0
        },
        // Basic text label style
        {
            "class": "label_control",
            "fg": "var(light_gray)",
            "font.bold": true
        },
        // Brighten labels contained in a button on hover
        {
            "class": "label_control",
            "parents": [{"class": "button_control", "attributes": ["hover"]}],
            "fg": "white"
        }
    ]
}





《《Terminology》》
一个 theme 就是一个 JSON object,包含了 rule_objects_list 和可选的 variables_object .
每个 rule_object 包含了一个 class key ,用于匹配对应的 elements .
除 class 之外,还有 attributes 和 parents key 可以用来进一步限定对应 elements .
然后是用于控制对应 elements 外观和行为的 properties .
variables 只能被 top-level rules 引用.
不同于大多数 elements 只有一个 class name ,有些 elements 有多个 class name ;以便使用多种 styling .

Most elements have a single class name, although a few have more than one to allow for both generic(通用的), and specific(详细的,具体的) styling. For example, the popup_control class can be used to set styles for the auto complete and HTML popups, however popup_control auto_complete_popup may be used to target just the auto complete popup. Multiple class values are separated by a space. When a rule specified multiple class names, all must be present on the element for the rule to be applied. 

attributes are set by Sublime Text, and indicate(表明,象征,暗示) the state of user interaction(<名>互动), or other information about the nature of an element. The value is an array of strings. Examples include "hover", "pressed" and "dirty". 

settings are user-controlled values that can be changed at run-time. The value is an array of strings which are the names of boolean settings pulled from .sublime-settings files. To check for a false value, prefix the setting name with a ! Themes may also create their own settings to allow users to change the style. Examples include "bold_folder_labels" and "!always_show_minimap_viewport". 

The parents key is an array of objects specifying the class and attributes that must be matched in a parent element. 

The platforms key is an array of strings specifying the what operating systems to apply the rule to. Valid options include "osx", "windows", and "linux". 

Properties(财产) refer(涉及) to all other keys in the JSON objects. Some properties(财产) are available on all elements, while others are specific(详细的,具体的) to an individual(单独的,个别的) element. 





General(总体的,普遍的) Information
The follow sections(段落) discuss(讨论) information about images and how to specify styles. 

Specificity(特异性)
Unlike CSS, a Sublime Text theme does not do specificity(特异性) matching when applying rules to elements. All rules are tested, in order(命令,顺序), against each element. Subsequent rules that match will override properties(财产) from previous(先前的) rules. 






Texture Images
All textures in a theme are specified using PNG images. Each texture should be saved at "normal" DPI(dots per inch 分辨率), where each pixel in the file will be mapped to one device pixel. All file paths in the theme definition(<名>定义) should reference(查阅,参考) the normal DPI(dots per inch 分辨率) version. 

A second version of each texture should also be included at double the DPI(dots per inch 分辨率), with @2x added to the filename right before the extension(扩展名). Sublime Text will automatically use the @2x version when being displayed on a high-DPI(dots per inch 分辨率) screen. It is also possible to specify @3x variants(变体) of textures for screens running at 300% scale(比例) or higher. 

SVG images are not currently supported. 

Dimensions(维度)
Integer units in a theme referring(涉及) to dimensions(维度) are always specified in device-independent pixels (DIP). Sublime Text automatically handles scaling UI elements based on the screen density(像素密度). 

Padding(内边距) & Margins
Padding(内边距) and margin may be specified in one of three ways: 
A single integer value – the same value is applied to the left, top, right and bottom 
An array of two integers – the first value is applied to the left and top, while the second value is applied to the right and bottom 
An array of four integers – the values are applied, in order(命令,顺序), to the left, top, right and bottom 





Variables
Reusable variables may be defined by a JSON object under the top-level key "variables". Variable names are strings, however the value may be a string, number, boolean, array or object. Using a variable requires specifying a string in the format var(example_variable_name). 
{
    "variables":
    {
        "light_gray": "rgb(240, 240, 240)"
    },
    "rules":
    [
        {
            "class": "label_control",
            "fg": "var(light_gray)"
        }
    ]
}
Variables may be used as the value for any property(财产), but the variable must be the entire(完整的) value, it may not be embedded(嵌入) within another variable. The only exception(例外) to this rule is that variables may be used as the base color for the CSS color() mod function. 





Colors
Colors may be specified by CSS or legacy(遗产) color syntax: 



CSS Color Syntax
Since Sublime Text build 3177, colors in themes may now be specified using CSS syntax, as supported by minihtml. This includes support for hex, rgb(), hsl(), variables and the color mod function. Additionally, all predefined variables that are derived(派生) from the color scheme are available for use. 

The color white, as hex 
#fff
The color white, using rgb() functional notation 
rgb(255, 255, 255)
50% opacity white, using hsla() functional notation 
hsla(0, 100%, 100%, 0.5)
The closest color to red, as defined in the color scheme 
var(--redish)
50% opacity of the closest color to red, as defined in the color scheme 
color(var(--redish) a(0.5))



Legacy(遗产) Color Syntax

Prior(之前) to supporting CSS syntax for colors, themes were only able to specify colors using the following formats, which are now deprecated(反对). 
RGB
Colors in the RGB color space are specified via an array of 3 or 4 numbers, with the first three being integers ranging from 0 to 255 representing the components(组成部分) red, green and blue. The optional fourth number is a float ranging from 0.0 to 1.0 that controls the opacity of the color. 
The color white, with full opacity 
[255, 255, 255]
The color blue, with 50% opacity 
[0, 0, 255, 0.5]
HSL
Colors may also be specified using the HSL color space by creating an array of 4 elements, with the first being the string "hsl". The second element is an integer from 0 to 360 specifying the hue(色调). The third is an integer from 0 to 100 specifying the saturation(饱和度), and the fourth is an integer from 0 to 100 specifying the lightness. 
A dark magenta(品红), with full opacity 
["hsl", 325, 100, 30]
A float from 0.0 to 1.0 may be added as a fifth element to control the opacity. 
A bright teal(青色), with 50% opacity 
["hsl", 180, 100, 75, 0.5]



Derived(派生) Colors
It is also possible to derive(派生) colors from the current global color scheme. Colors in this format are specified using arrays with specific(详细的,具体的) formats. In all cases, the first element is the base color, which may be "foreground", "background" or "accent". 

Change Opacity of Base Color
To change the opacity of a base color, specify an array of 2 elements, the first being the base color name and the second being a float from 0.0 to 1.0. The opacity will be set to the float value. 
The color scheme foreground, at 90% opacity 
["foreground", 0.9]

De-saturate(去饱和) Base Color
To de-saturate(去饱和) a base color, specify an array with 3 elements. The first is the name of the base color, the second is the string "grayscale", and the third is an integer from 0 to 100 which specifies what percentage of the saturation(饱和度) (in HSL color space) of the existing color should be retained(保持). A value of 100 means no change, whereas(而) a value of 0 would cause the color to be completely desaturated. 
The color scheme foreground, with the saturation(饱和度) adjusted to 1/4 of the original value. 
["foreground", "grayscale", 25]

Tint Base Color
5 and 6-element derived(派生) colors allow blending(混合) a color into the base color. A 5-element colors uses an RGBA color, whereas(而) a 6-element uses an HSLA. In both cases, the last element, which normally represents the opacity, controls how much of the secondary color is blended(混合) into the base. 
The color scheme background, lightened(变淡) with white 
["background", 255, 255, 255, 0.1]
The color scheme accent, tinted with dark red 
["accent", "hsl", 0, 100, 30, 0.2]

Colors derived(派生) from the color scheme will always be based on the global color scheme, and will not reflect(反射) view-specific(详细的,具体的) color schemes. Certain(确信的,有些) view-specific(详细的,具体的) controls in the UI have tinting properties(财产) that allow using the view-specific(详细的,具体的) color scheme colors. 





Attributes
Attributes are specified as an array of strings. Each string is an attribute name. To check for the absence(缺省值) of an attribute, prepend(前置) a ! to the name. 

The following attributes are common(常见的) to all elements: 
hover
set whenever the user's mouse is hovered over an element 



Luminosity(光度)
Although not available on all elements, many have attributes set based on the approximate(近似的) luminosity(光度) of the current color scheme. Most elements have the attributes set based on the global color scheme. Tabs and the tab background, however, have the attributes based on the color scheme specific(详细的,具体的) to the selected view. 

The attributes are assigned based on the V value of the background color, when represented as HSV colors. 
file_light
V from 0.60-1.00
file_medium
V from 0.30-0.59
file_medium_dark
V from 0.10-0.29
file_dark
V from 0.00-0.09





Settings
Certain(确信的,有些) Sublime Text settings are design to influence(影响,作用) the UI. Themes should respect(尊重) these settings and change elements based on them. 

overlay_scroll_bars
this should affect(影响) the style of the scroll bars – generally(通常地) they should be semi-transparent(半透明) and the overlay(覆盖) property(财产) of the scroll_area_control should be set to true 

always_show_minimap_viewport
if the current viewport area should be highlighted on the minimap even when the user is not hovering over the minimap. 

bold_folder_labels
if folder names in the side bar should have the font.bold property(财产) set to true. 

mouse_wheel_switches_tabs
this is used to control mouse wheel behavior(行为) of tabs on Linux. It should be combined with checking for !enable_tab_scrolling to change the mouse_wheel_switch key of the tabset_control to false. 

highlight_modified_tabs
if the tabs of modified files should be highlighted. This setting should be checked (in addition to除...之外,还) the dirty attribute. 

show_tab_close_buttons
if tabs should have close buttons 





Properties(财产)
The "rules" key of a .sublime-theme file is a JSON array of objects describing how UI elements should be styled. Every element in the UI supports the following keys: 
layer0.*
the bottom-most texture layer for the element 

layer1.*
the second texture layer for the element 

layer2.*
the third texture layer for the element 

layer3.*
the fourth texture layer for the element 

hit_test_level
a float value setting the required opacity of a pixel for a click to be considering a "hit" 



Layer Properties(财产)
Every element in the UI supports up to four texture layers(层) for displaying fill colors and raster(光栅) graphics(图形). Each layer has dotted sub-keys in the format layer#.sub-key. Valid sub-keys include: 
layer#.opacity
a float value from 0.0 to 1.0 that controls the master opacity of the layer. 
Example: 0.9 

layer#.tint
a color value of a fill color to apply to the layer. 
Example: [255, 0, 0, 127] 

layer#.texture
a string of the file path to a PNG image, relative to the Packages/ folder. 
Example: "Theme - Default/arrow_right.png" 

layer#.inner_margin
texture images are stretched(拉伸) to fit the element by slicing(切) into a grid(网格) of 9 using four lines. See padding(内边距) & margins for valid formats with which to specify the margin used to make the slices. 
Example: [5, 2, 5, 2] 

layer#.draw_center
a boolean that controls if the center rectangle(长方形) of the 9-grid(网格) created via layer#.inner_margin should be drawn. This is an optimization(最优选项) that allows skipping an unused section(部分) of texture. 
Example: false 

layer#.repeat
a boolean that controls if the texture should be repeated instead of stretched(拉伸). 
Example: false 

Value Animation(动画)
Properties(财产) specified by floats may be animated(动画化) over time. Instead of providing a single numeric value, the animation(动画) is specified with an object including details of the animation(动画). Value animation(动画) is primarily useful for changing opacity over time. The object keys are: 
target
a float value from 0.0 to 1.0 that controls the destination(终点) value 
Example: 1.0 

speed
a float value of 1.0 or greater that controls the relative length of time the animation(动画) takes 
Example: 1.5 

interpolation(插入内容)
an optional string that allow specifying the use of smoothstep(平滑变化) function instead of the default linear function. 
Default: "linear"
Example: "smoothstep(平滑变化)" 

Texture Animation(动画)
The layer#.texture sub-key may be an object to specify an animation(动画) based on two or more PNG images. The object keys are: 
keyframes
an array of strings of the paths to PNG images, in order(命令,顺序) 
Example: ["Theme - Default/spinner.png", "Theme - Default/spinner1.png"] 

loop
an optional boolean that controls if the animation(动画) should repeat 
Default: false
Example: true 

frame_time
an optional float specifying how long each frame should be displayed. 1.0 represents 1 second. 
Default: 0.0333 (30 fps)
Example: 0.0166 (60 fps) 



Texture Tinting Properties(财产)
Certain(确信的,有些) elements have an available tint value set by the background of current color scheme. The tint can be modified and applied to a layer#.texture image. 

tint_index
Controls which layer the tint is applied to. Must be an integer from 0 to 3. 

tint_modifier
An array of four integers in the range 0 to 255. The first three are blended(混合) into the RGB values from the tint color with the fourth value specifying how much of these RGB modifier values to apply. 



Font Properties(财产)
Certain(确信的,有些) textual elements allow setting the following font properties(财产): 
font.face
the name of the font face 

font.size
an integer point size 

font.bold
a boolean, if the font should be bold 

font.italic
a boolean, if the font should be italic 



Shadow Properties(财产)
Some text elements allow setting the following properties(财产): 
shadow_color
a color value to use for the text shadow 

shadow_offset
a 2-element array containing the X and Y offsets of the shadow 



Filter(筛选器) Label Properties(财产)
Labels used in the quick panel have color control based on selection and matching 

fg
a color value for unselected, unmatched text 

match_fg
a color value for unselected, matched text 

bg
a color value for the background of an unselected row 

selected_fg
a color value for selected, unmatched text 

selected_match_fg
a color value for selected, matched text 

bg
a color value for the background of a selected row 

font.face
the name of the font face 

font.size
an integer point size 



Data Table Properties(财产)
Row-based tables of data provide(提供) the following properties(财产): 

dark_content
if the background is dark – used to set the dark attribute for scrollbars 

row_padding
padding(内边距) added to each row, in one of the formats described in padding(内边距) & margins 



Styled Label Properties(财产)
Certain(确信的,有些) labels allow for additional control over their appearance(外观). They support the properties(财产): 
border_color
a color value for the border of the label 

background_color
a color value for the background of the label 





Elements
The following is an exhaustive(详尽的,全面的) list of the elements that comprise(包含) the Sublime Text UI, along with supported attributes and properties(财产):
Windows
title_bar
Only supported on OS X 10.10+. 

Attributes
luminosity(光度) attributes

Properties(财产)
fg
a color value to use for the window title text 

bg
a color value to use for the title bar background 



window
This element can not be styled directly, however it can be used in a parents specifier(说明符). The luminosity(光度) attributes are set based on the global color scheme. 
Attributes
luminosity(光度) attributes

Properties(财产)
none



edit_window
This element contains the main editor window, and is intended(打算,意图) for use in a parents specifier(说明符). 

Properties(财产)
none



switch_project_window
This element contains the Switch Project window, and is intended(打算,意图) for use in a parents specifier(说明符). 

Properties(财产)
none



Side Bar
sidebar_container
The primary sidebar container that handles scrolling 

Properties(财产)
content_margin
the margin around the sidebar_tree 



sidebar_tree
A tree control containing multiple tree_rows 

Properties(财产)
data table properties(财产)
indent
an integer amount to indent each level of the tree structure 

indent_offset
an additional indent applied to every row, for the sake(目的) of positioning disclosure(分开)_button_control and close_button 

indent_top_level
a boolean if top-level rows in the tree should be indented 

spacer_rows
a boolean controlling if a blank row should be added between the Open Files and Folders sections(段落) of the sidebar, when both are visible. 



tree_row
A row may contain a header, open file, folder or file 

Attributes
selectable
when a row is selectable 

selected
when an selectable row is selected 

expandable
when a row is expandable 

expanded
when an expandable row is expanded 



sidebar_heading
One of the "Open Files", "Group #" or "Folders" headings in the sidebar 

Properties(财产)
font properties(财产)
shadow properties(财产)

fg
a color value to use for the text 

case
the case modification to use for the heading - "upper", "lower" or "title". 
Default: "upper" 



file_system_entry
The container holding information about a file or folder in the sidebar. Contains different controls based on which section(部分) of the sidebar it is within. 
Within the Open Files section(部分), this control will contain a sidebar_label with the file name, plus possibly a vcs_status_badge. 
Within the Folders section(部分), this control will contain a folder or file icon (either icon_folder, icon_folder_loading, icon_folder_dup or icon_file_type), a sidebar_label with the file or folder name, plus possibly a vcs_status_badge. 

Attributes
ignored
Files: when a file is ignored
Folders: when the entire(完整的) folder is ignored 

untracked
Files: when a file is new or not recognized(认出)
Folders: when a folder contains one or more untracked files 

modified
Files: when a file has been changed on disk
Folders: when a folder contains one or more modified files 

missing
Folders: when one or more of a folder‘s files is no longer on disk 

added
Files: when a new file has been newly added to the index
Folders: when a folder contains one or more added files 

staged
Files: when a modified file has been added to the index
Folders: when a folder contains one or more staged files 

deleted
Folders: when one or more of a folder‘s files has been added to the index for removal(<名>去除) 

unmerged
Files: when a file is in a conflict(冲突) state and needs to be resolved(解决)
Folders: when a folder contains one or more unmerged files 

Properties(财产)
content_margin
the margin around the contained controls 

spacing
an integer number of pixels between each contained control 



sidebar_label
Names of open files, folder names and filenames 

Properties(财产)
font properties(财产)
shadow properties(财产)
fg
a color value to use for the text 



close_button
A button to the left of each file in the Open Files section(部分) 
Properties(财产)
content_margin
for buttons, the margin specifies the dimensions(维度) 



disclosure_button_control
An expand/collapse(坍缩) icon present in all tree_rows that can be expanded 

Properties(财产)
content_margin
for buttons, the margin specifies the dimensions(维度) 



icon_folder
Used for a folder once the contents have been fully enumerated(枚举,列举) 

Properties(财产)
content_margin
for icons, the margin specifies the dimensions(维度) 



icon_folder_loading
Used for a folder while the contents are being enumerated(枚举,列举) 

Properties(财产)
content_margin
for icons, the margin specifies the dimensions(维度) 



icon_folder_dup
Used for a folder that has been scanned previously(先前地) in the sidebar. This is necessary(必需的) to prevent(阻止,防止) a possibly infinite(极大的,无限的) list of files (due to由于) recursive(递归的) symlinks(符号链接). 

Properties(财产)
content_margin
for icons, the margin specifies the dimensions(维度) 



icon_file_type
The icon for a file. The layer0.texture should not be set since it is determined(确定) dynamically(动态地) based on the icon setting provided by .tmPreferences files. 

Properties(财产)
content_margin
for icons, the margin specifies the dimensions(维度) 



vcs_status_badge
An icon contained within file_system_entry that is used to display the status of a file or folder with regards(<名>注意) to a Git repository(库) it is contained in. This icon will only be shown if the setting show_git_status is true, the file is contained within a Git repository(库), and the file has some sort of special state within the repository(库). A file that is not shown via git status and is not ignored via a .gitignore rule will have no icon. 

Attributes
ignored
Files: when a file is ignored
Folders: when the entire(完整的) folder is ignored 

untracked
Files: when a file is new or not recognized(认出)
Folders: when a folder contains one or more untracked files 

modified
Files: when a file has been changed on disk
Folders: when a folder contains one or more modified files 

missing
Folders: when one or more of a folder‘s files is no longer on disk 

added
Files: when a new file has been newly added to the index
Folders: when a folder contains one or more added files 

staged
Files: when a modified file has been added to the index
Folders: when a folder contains one or more staged files 

deleted
Folders: when one or more of a folder‘s files has been added to the index for removal(<名>去除) 

unmerged
Files: when a file is in a conflict(冲突) state and needs to be resolved(解决)
Folders: when a folder contains one or more unmerged files 

Properties(财产)
content_margin
for icons, the margin specifies the dimensions(维度) 



Tabs



tabset_control

Attributes
luminosity(光度) attributes

Properties(财产)
content_margin
the margin around the tab_controls 

tab_overlap
how many DIPs the tabs should overlap 

tab_width
default tab width when space is available 

tab_min_width
the minimum tab width before tab scrolling occurs(发生) 

tab_height
the height of the tabs in DIPs 

mouse_wheel_switch
if the mouse wheel should switch tabs – this should only be set to true if the setting enable_tab_scrolling is false 



tab_control

Attributes
luminosity(光度) attributes

dirty
when the associated(相关的) view has unsaved changed 

selected
when the associated(相关的) view is the active view in its group 

transient(临时的)
when the associate(相关的) view is a preview(预览) and not fully opened 

Properties(财产)
content_margin
the margin around the tab_label 

max_margin_trim
how much of the left and right content_margin may be removed when tab space is extremely(极端,极其) limited 

accent_tint_index
Controls which layer the accent tint is applied to. Must be an integer from 0 to 3. The accent color is specified by the color scheme. 

accent_tint_modifier
An array of four integers in the range 0 to 255. The first three are blended(混合) into the RGB values from the accent tint color with the fourth value specifying how much of these RGB modifier values to apply. 



tab_label

Attributes
transient(临时的)
when the associate(相关的) view is a preview(预览) and not fully opened 

Properties(财产)
font properties(财产)

shadow properties(财产)
fg
a color value to use for the text 



tab_close_button

Properties(财产)
content_margin
for buttons, the margin specifies the dimensions(维度) 

accent_tint_index
Controls which layer the accent tint is applied to. Must be an integer from 0 to 3. The accent color is specified by the color scheme. 

accent_tint_modifier
An array of four integers in the range 0 to 255. The first three are blended(混合) into the RGB values from the accent tint color with the fourth value specifying how much of these RGB modifier values to apply. 



scroll_tabs_left_button
Properties(财产)
content_margin
for buttons, the margin specifies the dimensions(维度) 



scroll_tabs_right_button
Properties(财产)
content_margin
for buttons, the margin specifies the dimensions(维度) 



show_tabs_dropdown_button
Properties(财产)
content_margin
for buttons, the margin specifies the dimensions(维度) 



Quick Panel
The quick panel is used for the various Goto functionality, the command palette and is available for use by plugins. 



overlay_control
The container for the quick panel, including the input and data table 
Properties(财产)
content_margin
the margin around the quick_panel 



quick_panel
The data table displayed below the input. Normally the height is dynamic(动态的) so the layers(层) will not be visible, however the Switch Project window will use layers(层) for the blank space below the filtered(筛选) options. 

Properties(财产)
data table properties(财产)



mini_quick_panel_row
A non-file row in quick_panel. Contains one quick_panel_label for each line of text in the row. 
Attributes
selected
when the row is selected 



quick_panel_row
A Goto Anything file row in quick_panel. Also used in the Switch Project window. 
Contains quick_panel_label with the filename, and quick_panel_path_label for the file path. 

Attributes
selected
when the row is selected 



quick_panel_label
Filenames in quick_panel_row and all text in mini_quick_panel_row 
Properties(财产)
filter(筛选器) label properties(财产)



quick_panel_path_label
File paths in quick_panel_row 
Properties(财产)
filter(筛选器) label properties(财产)



Views
text_area_control
This element can not be styled directly since that is controlled by the color scheme, however it can be used in a parents specifier(说明符). 

Attributes
luminosity(光度) attributes

Properties(财产)
none



grid_layout_control
The borders displayed between views when multiple groups are visible 

Properties(财产)
no layer support

border_color
a color value to use for the border 

border_size
an integer of the border size in DIPs 



minimap_control
Control over the display of the viewport projection(投射) on the minimap 
Properties(财产)
no layer support

viewport_color
a color value to fill the viewport projection(投射) with 

viewport_opacity
a float from 0.0 to 1.0 specifying the opacity of the viewport projection(投射) 



fold_button_control
Code folding buttons in the gutter 

Attributes
expanded
when a section(部分) of code is unfolded 

Properties(财产)
content_margin
for buttons, the margin specifies the dimensions(维度) 



popup_control auto_complete_popup
The primary container for the auto complete popup 



popup_control html_popup
The primary container for the HTML popups used by Show Definitions(<名>定义) and third-party(第三方的) packages. The tint of the scroll bar will be set to the background color of the HTML document. 



auto_complete
The data table for completion(<名>完成) data. The tint is set based on the background color of the color scheme applied to the view the popup is displayed in. 

Properties(财产)
data table properties(财产)
texture tinting properties(财产)



table_row
A row in auto_complete 
Attributes
selected
when the user has highlighted a completion(<名>完成) 



auto_complete_label
Text in a table_row 
Properties(财产)
filter(筛选器) label properties(财产)



fg_blend
a boolean controlling if the fg, match_fg, selected_fg, and selected_match_fg values should be blended(混合) onto the foreground color from the color scheme of the current view 



Panels

panel_control find_panel
The container for the Find and Incremental(增加的,增值的) Find panels. 

Properties(财产)
content_margin
the margin around the panel contents 



panel_control replace_panel
The container for the Replace panel. 
Properties(财产)
content_margin
the margin around the panel contents 



panel_control find_in_files_panel
The container for the Find in Files panel. 
Properties(财产)
content_margin
the margin around the panel contents 



panel_control input_panel
The container for the input panel, which is available via the API and used for things like file renaming. 

Properties(财产)
content_margin
the margin around the panel contents 



panel_control console_panel
The container for the Console. 
Properties(财产)
content_margin
the margin around the panel contents 



panel_control output_panel
The container for the output panel, which is available via the API and used for build results. 
Properties(财产)
content_margin
the margin around the panel contents 



panel_control switch_project_panel
The container for the input in the Switch Project window. 
Properties(财产)
content_margin
the margin around the panel contents 



panel_grid_control
The layout grid(网格) used to position inputs on the various panels. 
Properties(财产)
no layer support

inside_spacing
an integer padding(内边距) to place between each cell of the grid(网格) 

outside_vspacing
an integer padding(内边距) to place above and below the grid(网格) 

outside_hspacing
an integer padding(内边距) to place to the left and right of the grid(网格) 



panel_close_button
The button to close the open panel 
Properties(财产)
content_margin
for buttons, the margin specifies the dimensions(维度) 



Status Bar

status_bar
Attributes

panel_visible
when a panel is displayed above the status bar 
Properties(财产)
content_margin
the margin around the panel_button_control, status_container and status_buttonss 



panel_button_control
The panel switcher button on the left side of the status bar 
Properties(财产)
content_margin
for buttons, the margin specifies the dimensions(维度) 



status_container
The area that contains the current status message 
Properties(财产)
content_margin
the margin around the status message 



status_button
The status buttons that display, and allow changing, the indentation, syntax, encoding and line endings 
Properties(财产)
content_margin
for buttons, the margin specifies the dimensions(维度) 



min_size
an array of two integers specifying the minimum width and height of a button, in DIPs 



vcs_status
The container holding the vcs_branch_icon, label_control with the current branch name, and vcs_changes_annotation(注释) control 
Properties(财产)
content_margin
the margin around the contained controls 

spacing
an integer number of pixels between each contained control 



vcs_branch_icon
An icon shown to the left of the current branch name 
Properties(财产)
content_margin
for icons, the margin specifies the dimensions(维度) 



vcs_changes_annotation(注释)
Displays the number of files that have been added, modified or deleted 
Properties(财产)
font properties(财产)
shadow properties(财产)
styled label properties(财产)



Dialogs
dialog(会话窗口)
The Indexer Status and Update windows both use this class for the window background 



progress_bar_control
The progress(前进,进步) bar container. The progress(前进,进步) bar is displayed in the Update window used for updates on OS X and Windows. 



progress_gauge(计量器)_control
The bar representing the progress(前进,进步) completed so far 
Properties(财产)
content_margin
the margin specifies the height of the bar 



Scroll Bars

scroll_area_control
The scroll area contains the element being scrolled, along with the bar, track and puck. 

Attributes
scrollable
when the control can be scrolled vertically 

hscrollable
when the control can be scrolled horizontally 

Properties(财产)
content_margin
a margin that is added around the content being scrolled 

overlay(覆盖)
sets the scroll bars to be rendered(渲染) on top of the content 

left_shadow
a color value to use when drawing a shadow to indicate(表明,象征,暗示) the area can be scrolled to the left 

left_shadow_size
in integer of the width of the shadow to draw when the area can be scrolled to the left 

top_shadow
a color value to use when drawing a shadow to indicate(表明,象征,暗示) the area can be scrolled to the top 

top_shadow_size
in integer of the height of the shadow to draw when the area can be scrolled to the top 

right_shadow
a color value to use when drawing a shadow to indicate(表明,象征,暗示) the area can be scrolled to the right 

right_shadow_size
in integer of the width of the shadow to draw when the area can be scrolled to the right 

bottom_shadow
a color value to use when drawing a shadow to indicate(表明,象征,暗示) the area can be scrolled to the bottom 

bottom_shadow_size
in integer of the height of the shadow to draw when the area can be scrolled to the bottom 

scroll_bar_control
The scroll bar contains the scroll track. The tint is set based on the background color of the element being scrolled. 
Attributes
dark
when the scroll area content is dark, necessitating(<动>需要) a light scroll bar 
horizontal
when the scroll bar should be horizontal instead of vertical 
Properties(财产)
texture tinting properties(财产)
content_margin
a margin that is added around the scroll track 
scroll_track_control
The track that the puck runs along. The tint is set based on the background color of the element being scrolled. 
Attributes
dark
when the scroll area content is dark, necessitating(<动>需要) a light scroll bar 

horizontal
when the scroll bar should be horizontal instead of vertical 
Properties(财产)
texture tinting properties(财产)

scroll_corner_control
The dead space in the bottom right of a scroll_area_control when both the vertical and horizontal scroll bars are being shown. 
Attributes
dark
when the scroll area content is dark, necessitating(<动>需要) a light scroll bar 
Properties(财产)
texture tinting properties(财产)

puck_control
The scroll puck, or handle. The tint is set based on the background color of the element being scrolled. 
Attributes
dark
when the scroll area content is dark, necessitating(<动>需要) a light scroll bar 
horizontal
when the scroll bar should be horizontal instead of vertical 
Properties(财产)
texture tinting properties(财产)

Inputs
text_line_control
The text input used by the Quick Panel, Find, Replace, Find in Files and Input panels. 
Properties(财产)
content_margin
the margin around the text 

color_scheme_tint
a color value to use to tint the background of the color scheme 

color_scheme_tint_2
a color value to use to add a secondary tint to the background of the color scheme 

dropdown_button_control
The button to close the open panel 
Properties(财产)
content_margin
for buttons, the margin specifies the dimensions(维度) 



Buttons
button_control
Text buttons 
Attributes
pressed
set when a button is pressed down 

Properties(财产)
min_size
an array of two integers specifying the minimum width and height of a button, in DIPs 

icon_button_group
A grid(网格) controlling the spacing of related(相邻的) icon buttons 
Properties(财产)
no layer support
spacing
an integer number of pixels between each button in the group 

icon_button_control
Small icon-based buttons in the Find, Find in Files, and Replace panels 
Attributes
selected
when an icon button is toggled on 
left
when the button is the left-most button in a group 
right
when the button is the right-most button in a group 

icon_regex
The button to enable regex mode in the Find, Find in Files and Replace panels 
Properties(财产)
content_margin
for icons, the margin specifies the dimensions(维度) 

icon_case
The button to enable case-sensitive(敏感的) mode in the Find, Find in Files and Replace panels 
Properties(财产)
content_margin
for icons, the margin specifies the dimensions(维度) 

icon_whole_word
The button to enable whole-word mode in the Find, Find in Files and Replace panels 
Properties(财产)
content_margin
for icons, the margin specifies the dimensions(维度) 

icon_wrap
The button to enable search wrapping when using the Find and Replace panels 
Properties(财产)
content_margin
for icons, the margin specifies the dimensions(维度) 

icon_in_selection
The button to only search in the selection when using the Find and Replace panels 
Properties(财产)
content_margin
for icons, the margin specifies the dimensions(维度) 

icon_highlight
The button to enable highlighting all matches in the Find and Replace panels 
Properties(财产)
content_margin
for icons, the margin specifies the dimensions(维度) 

icon_preserve(保护)_case
The button to enable preserve(保护)-case mode when using the Replace panel 

Properties(财产)
content_margin
for icons, the margin specifies the dimensions(维度) 

icon_context
The button to show context around matches when using the Find in Files panel 
Properties(财产)
content_margin
for icons, the margin specifies the dimensions(维度) 

icon_use_buffer
The button to display results in a buffer, instead of an output panel, when using the Find in Files panel 
Properties(财产)
content_margin
for icons, the margin specifies the dimensions(维度) 

Labels
label_control
Labels are shown in the Find, Replace, Find in File and Input panels. Additionally, labels are used in the Update window, on textual buttons and for the text in the status_container. 
Targeting specific(详细的,具体的) labels can be accomplished(完成,实现) by using the parents key. 
Properties(财产)
font properties(财产)
shadow properties(财产)
color
a color value to use for the text 

title_label_control
The title label is used in the About window. 
Properties(财产)
font properties(财产)
shadow properties(财产)
color
a color value to use for the text 



Tool Tips

tool_tip_control
Tool tips shown when hovering over tabs and buttons 
Properties(财产)
content_margin
the margin around the tool tip text 

tool_tip_label_control
Text shown in a tool tip 
Properties(财产)
font properties(财产)
shadow properties(财产)
color
a color value to use for the text 





Deprecated(反对)
Color Values
Before build 3127, the only way to specify opacity in colors was by using a 4-element array containing all integers from 0 to 255. The fourth element controlled the opacity, such that 0 was fully transparent and 255 was fully opaque(不透明的). The preferred(更喜欢的) format is now to use a float from 0.0 to 1.0. 




Obsolete(过时的)
As the UI of Sublime Text has adapted(适应) over time, certain(确信的,有些) elements and properties(财产) are no longer applicable(可应用的) or supported. 

Elements
The sheet_container_control element is never visible to users in recent versions of Sublime Text 3. 
An element named icon_reverse used to exist in the find panel to control if searching would move forward or backwards in the view. This is now controlled by the Find and Find Prev buttons. 
The element named quick_panel_score_label is no longer present in the Goto Anything quick panel. 

Properties(财产)
The blur(失焦) property(财产) used to be supported to blur(失焦) the pixel data behind an element, however it is not currently supported for implementation reasons. 





Customization
Users can customize a theme by creating a file with new rules that will be appended to the original theme definition(<名>定义). 
To create a user-specific(详细的,具体的) customization of a theme, create a new file with the same filename as the theme, but save it in the Packages/User/ directory. 
For example, to customize the Default theme, create a file named Packages/User/Default.sublime-theme. Adding the following rules to that file will increase(增长,增加) the size of the text in the sidebar. 
[
    {
        "class": "sidebar_heading",
        "font.size": 15,
    },
    {
        "class": "sidebar_label",
        "font.size": 14
    }
]





Changelog
Build 3186
scroll_area_control gained(获得,增加) the scrollable and hscrollable attributes 
Build 3181
Added the file_system_entry and vcs_status_badge controls to the sidebar 
Added the vcs_status, vcs_branch_icon and vcs_changes_annotation(注释) controls to the status bar 
Build 3179
Format now supports JSON object as top-level container, instead of an array 
Added support for variables 
Allow colors to be specified using CSS syntax from minihtml 
The sidebar_heading element now has the case property(财产) 
Removed note about animation(动画) of opacity causing issues(问题,议题) due to sequential(连续的) rule application. Duplicate property(财产) values are now ignored, and only the final value found is applied. 
scroll_area_control gained(获得,增加) the ability to set shadows on any side that can be scrolled 
Build 3167
Added support for @3x textures 
© Sublime HQ Pty Ltd 
Woollahra, Sydney. 