Python程序语言指定任何非0和非空（null）值为true，0 或者 null为false。
------------------------------------------------------------------
《《if语句》》
-----------------------------------------
a = 99
if a == 9:
    print("a==9")
elif a != 99:
    print("a!=99")
elif a == 88:
    print("a==88")
else:
    print("else")

--------------------------------------
《《while语句》》
《《break语句》》
-----------------------------------------
a = 0
while a < 10:
    print(a)
    a += 1
else:
    print("good bye")
print("hello")

a = 0
while a < 10:
    print(a)
    a += 1
    if a == 10:
        break
else:
    print("good bye")
print("hello")

------------------------------------------
《《for语句》》
-----------------------------------------
t = (1, 2, 3, 4, 5, 6, 7, 8, 9, "Aoi")
for i in t:
    print(i)
else:
    print("good bye")
print("hello")

for i in t:
    print(i)
    if i == 9:
        break
else:
    print("goodbye")
print("hello")

-------------------------------------------
《《continue语句》》
-----------------------------------------
a = 0
while a < 4:
    a += 1
    print("continue 之前：", a)
    if a == 3:
        continue
    print("continue 之后：", a)
print("hello")

----------------------------------------------
《《pass语句》》
-----------------------------------------

# 输出 Python 的每个字母
for letter in 'Python':
    if letter == 'h':
        pass  # pass语句不做任何事情，只是为了占位而存在
        print('这是 pass 块')
    print('当前字母 :', letter)

print("Good bye!")

-----------------------------------------------
《《求绝对值函数》》
-----------------------------------------
def jdz(i):
    "求绝对值"
    if i < 0:
        return ~i + 1
    else:
        return i


a = 0
while a > -9:
    a -= 1
    print(jdz(a))

---------------------------------------
《《满五进一函数》》
-----------------------------------------
def mwjw(i):
    a = i * 10 % 10
    if a >= 5:
        return i * 10 // 10 + 1
    else:
        return i * 10 // 10


a = 0
while a < 5:
    print(a, ":", mwjw(a))
    a += 0.1

----------------------------------------------
《《变量是指针》》
在 python 中，类型属于对象，变量是没有类型的：
a=[1,2,3]

a="Runoob"
以上代码中，[1,2,3] 是 List 类型，"Runoob" 是 String 类型，而变量 a 是没有类型，她仅仅是一个对象的引用（一个指针），可以是 List 类型对象，也可以指向 String 类型对象。
---------------------------------------------------------------------------------
《《可变与不可变对象》》
在 python 中，strings, tuples, 和 numbers 是不可更改的对象，而 list,dict 等则是可以修改的对象。
不可变类型：变量赋值 a=5 后再赋值 a=10，这里实际是新生成一个 int 值对象 10，再让 a 指向它，而 5 被丢弃，不是改变a的值，相当于新生成了a。
可变类型：变量赋值 la=[1,2,3,4] 后再赋值 la[2]=5 则是将 list la 的第三个元素值更改，本身la没有动，只是其内部的一部分值被修改了。
列表和字典保存的是指向成员对象的指针的列表，即成员变量列表。改变成员值实际是让成员变量指向新建的对象。
python 函数的参数传递：
不可变类型：类似 c++ 的值传递，如 整数、字符串、元组。如fun（a），传递的只是a的值，没有影响a对象本身。比如在 fun（a）内部修改 a 的值，只是修改另一个复制的对象，不会影响 a 本身。
可变类型：类似 c++ 的引用传递，如 列表，字典。如 fun（la），则是将 la 真正的传过去，修改后fun外部的la也会受影响
python 中一切都是对象，严格意义我们不能说值传递还是引用传递，我们应该说传不可变对象和传可变对象。
----------------------------------------------------------------------------------------
