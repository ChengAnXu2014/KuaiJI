用if语句动态赋值：
fun main() {
    var vr1 = if (false) 9 else 0
    println(vr1)
    vr1 = if (true) 9 else 0
    print(vr1)
}
*******
进阶版本：
fun main() {
    var vr1 = if (true) {
        println("条件为true选择9")
        9
    } else {
        println("条件为false不选0")
        0
    }
    println("现在vr1为：$vr1")
    vr1 = if (false) {
        println("条件为false不选9")
        9
    } else {
        println("条件为false选择0")
        0
    }
    print("现在vr1为：$vr1")
}
*************************************************************
区间判断：
fun main() {
    qj(5)
    qj(10)
}

fun qj(i: Int) {
    if (i in 1..9) {
        println("$i 在1..9区间内")
    } else {
        println("$i 不在1..9区间内")
    }
}
*************************************************************
when类似C语言的switch:
fun main() {
    fWhen(1)
    fWhen(2)
    fWhen(3)
}

fun fWhen(i: Int) {
    when (i) {
        1 -> println("参数为1")
        2 -> println("参数为2")
        else -> println("参数为其它")
    }
}
***********
条件还可以并列：
fun main() {
    fW(2)
    fW(3)
}

fun fW(i: Int) {
    when (i) {
        1, 2 -> {
            println("1，2中的：$i")
        }
        3, 4 -> {
            println("3,4中的：$i")
        }
    }
}
*********
区间条件：
fun main() {
    fW(3)
    fW(7)
}

fun fW(i: Int) {
    when (i) {
        in 1..5 -> println("1..5中的：$i")
        !in 9..19 -> println("不在9..19中的：$i")
    }
}
**********
类型条件：
fun main() {
    fW('w')
    fW(9)
}

fun fW(i: Any) {
    when (i) {
        is Int -> println("Int类型的：$i")
        !is String -> println("不是String类型的：$i")
    }
}